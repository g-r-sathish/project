<?xml version='1.0' encoding='utf-8'?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>reservation-service</artifactId>
    <name>Reservation RESTful Service</name>
    <packaging>war</packaging>
    <parent>
        <groupId>com.agilysys.pms</groupId>
        <artifactId>reservation</artifactId>
        <version>69.0.0.7-SNAPSHOT</version>
    </parent>
    <dependencies>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>com.agilysys.pms</groupId>
            <artifactId>reservation-interface</artifactId>
        </dependency>
        <dependency>
            <groupId>com.agilysys.pms</groupId>
            <artifactId>payment-interface</artifactId>
        </dependency>
        <dependency>
            <groupId>org.a3badran.platform</groupId>
            <artifactId>request-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>com.agilysys.pms</groupId>
            <artifactId>property-interface</artifactId>
        </dependency>
        <dependency>
            <groupId>com.agilysys.pms</groupId>
            <artifactId>profile-interface</artifactId>
        </dependency>
        <dependency>
            <groupId>com.agilysys.pms</groupId>
            <artifactId>integration-interface</artifactId>
        </dependency>
        <!-- Platform Crypto Toolkit -->
        <dependency>
            <groupId>com.agilysys.platform</groupId>
            <artifactId>crypto-toolkit</artifactId>
        </dependency>
        <dependency>
            <groupId>com.agilysys.pms</groupId>
            <artifactId>rate-service-interface</artifactId>
        </dependency>
        <dependency>
            <groupId>com.agilysys.pms</groupId>
            <artifactId>comment-interface</artifactId>
        </dependency>
        <dependency>
            <groupId>com.agilysys.platform</groupId>
            <artifactId>config</artifactId>
        </dependency>
        <dependency>
            <groupId>com.agilysys.platform</groupId>
            <artifactId>messaging-toolkit</artifactId>
        </dependency>
        <dependency>
            <groupId>com.agilysys.platform</groupId>
            <artifactId>rest-toolkit</artifactId>
        </dependency>
        <dependency>
            <groupId>com.agilysys.platform</groupId>
            <artifactId>persistence-toolkit</artifactId>
        </dependency>
        <dependency>
            <groupId>com.agilysys.platform</groupId>
            <artifactId>user-service-client-lib</artifactId>
        </dependency>
        <dependency>
            <groupId>com.agilysys.pms</groupId>
            <artifactId>pms-common</artifactId>
        </dependency>
        <dependency>
            <groupId>com.agilysys.pms.common</groupId>
            <artifactId>importer-toolkit</artifactId>
        </dependency>
        <!-- PMS Common test -->
        <dependency>
            <groupId>com.agilysys.pms</groupId>
            <artifactId>pms-common</artifactId>
            <scope>test</scope>
            <type>test-jar</type>
        </dependency>
        <!-- Platform Common Test -->
        <dependency>
            <groupId>com.agilysys.platform</groupId>
            <artifactId>common</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.agilysys.platform</groupId>
            <artifactId>auth</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <!-- spring -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>
        <!-- jackson (json) -->
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-base</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId>
        </dependency>
        <!-- apache -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <!-- google -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <!-- logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <!-- testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.kubek2k</groupId>
            <artifactId>springockito-annotations</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.agilysys.pms</groupId>
            <artifactId>account-service-interface</artifactId>
        </dependency>
        <dependency>
            <groupId>org.elasticsearch</groupId>
            <artifactId>elasticsearch</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hypoport</groupId>
            <artifactId>mockito-mockinjector</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <finalName>reservation-service</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <attachClasses>true</attachClasses>
                    <warName>reservation-service</warName>
                    <outputDirectory>${project.build.directory}</outputDirectory>
                    <archive>
                        <manifestEntries>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>build-docker-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <imageName>rguest-stay-${project.build.finalName}</imageName>
                            <imageTags>
                                <imageTag>${project.version}</imageTag>
                            </imageTags>
                            <dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
                            <resources>
                                <resource>
                                    <targetPath>/</targetPath>
                                    <directory>${project.build.directory}</directory>
                                    <include>${project.build.finalName}.war</include>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <resources>
            <!-- Default resource directory. -->
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <!-- Adds .orm &amp; .jdo resources to project. -->
            <resource>
                <directory>src/main/java</directory>
            </resource>
        </resources>
    </build>
    <profiles>
        <profile>
            <id>deploy-docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>tag-docker-image</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>tag</goal>
                                </goals>
                                <configuration>
                                    <image>rguest-stay-${project.build.finalName}:${project.version}</image>
                                    <newName>${docker.registry}/rguest-stay-${project.build.finalName}:${project.version}</newName>
                                </configuration>
                            </execution>
                            <execution>
                                <id>push-docker-image</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>push</goal>
                                </goals>
                                <configuration>
                                    <imageName>${docker.registry}/rguest-stay-${project.build.finalName}:${project.version}</imageName>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
